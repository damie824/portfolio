{
  "version": 3,
  "sources": ["../../../contentlayer.config.ts"],
  "sourcesContent": ["import { defineDocumentType, makeSource } from \"contentlayer/source-files\";\nimport highlight from \"rehype-highlight\";\nimport rehypePrettyCode from \"rehype-pretty-code\";\nimport remarkGfm from \"remark-gfm\";\n\nexport const Post = defineDocumentType(() => ({\n  name: \"Post\",\n  contentType: \"mdx\",\n  filePathPattern: \"posts/**/*.mdx\",\n  fields: {\n    title: { type: \"string\", required: true },\n    description: { type: \"string\", required: true },\n    createdAt: { type: \"date\", required: true },\n    thumbnail: { type: \"string\", required: true },\n    category: { type: \"list\", of: { type: \"string\" }, required: true },\n  },\n  computedFields: {\n    slug: {\n      type: \"string\",\n      resolve: (doc) => doc._raw.flattenedPath.replace(/posts\\/?/, \"\"),\n    },\n  },\n}));\n\nexport const Portfolio = defineDocumentType(() => ({\n  name: \"Portfolio\",\n  contentType: \"mdx\",\n  filePathPattern: \"portfolio/**/*.mdx\",\n  fields: {\n    title: { type: \"string\", required: true },\n    description: { type: \"string\", required: true },\n    createdAt: { type: \"date\", required: true },\n    thumbnail: { type: \"string\", required: true },\n    url: { type: \"json\", required: true },\n    tags: { type: \"list\", of: { type: \"string\" }, required: true },\n  },\n  computedFields: {\n    slug: {\n      type: \"string\",\n      resolve: (doc) => doc._raw.flattenedPath.replace(/portfolio\\/?/, \"\"),\n    },\n  },\n}));\n\nconst contentSource = makeSource({\n  contentDirPath: \"contents\",\n  documentTypes: [Post, Portfolio],\n  mdx: {\n    remarkPlugins: [],\n    rehypePlugins: [\n      [\n        rehypePrettyCode as any,\n        {\n          theme: \"github-dark\",\n        },\n      ],\n      highlight as any,\n    ],\n  },\n});\n\nexport default contentSource;\n"],
  "mappings": ";AAAA,SAAS,oBAAoB,kBAAkB;AAC/C,OAAO,eAAe;AACtB,OAAO,sBAAsB;AAGtB,IAAM,OAAO,mBAAmB,OAAO;AAAA,EAC5C,MAAM;AAAA,EACN,aAAa;AAAA,EACb,iBAAiB;AAAA,EACjB,QAAQ;AAAA,IACN,OAAO,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IACxC,aAAa,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IAC9C,WAAW,EAAE,MAAM,QAAQ,UAAU,KAAK;AAAA,IAC1C,WAAW,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IAC5C,UAAU,EAAE,MAAM,QAAQ,IAAI,EAAE,MAAM,SAAS,GAAG,UAAU,KAAK;AAAA,EACnE;AAAA,EACA,gBAAgB;AAAA,IACd,MAAM;AAAA,MACJ,MAAM;AAAA,MACN,SAAS,CAAC,QAAQ,IAAI,KAAK,cAAc,QAAQ,YAAY,EAAE;AAAA,IACjE;AAAA,EACF;AACF,EAAE;AAEK,IAAM,YAAY,mBAAmB,OAAO;AAAA,EACjD,MAAM;AAAA,EACN,aAAa;AAAA,EACb,iBAAiB;AAAA,EACjB,QAAQ;AAAA,IACN,OAAO,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IACxC,aAAa,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IAC9C,WAAW,EAAE,MAAM,QAAQ,UAAU,KAAK;AAAA,IAC1C,WAAW,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IAC5C,KAAK,EAAE,MAAM,QAAQ,UAAU,KAAK;AAAA,IACpC,MAAM,EAAE,MAAM,QAAQ,IAAI,EAAE,MAAM,SAAS,GAAG,UAAU,KAAK;AAAA,EAC/D;AAAA,EACA,gBAAgB;AAAA,IACd,MAAM;AAAA,MACJ,MAAM;AAAA,MACN,SAAS,CAAC,QAAQ,IAAI,KAAK,cAAc,QAAQ,gBAAgB,EAAE;AAAA,IACrE;AAAA,EACF;AACF,EAAE;AAEF,IAAM,gBAAgB,WAAW;AAAA,EAC/B,gBAAgB;AAAA,EAChB,eAAe,CAAC,MAAM,SAAS;AAAA,EAC/B,KAAK;AAAA,IACH,eAAe,CAAC;AAAA,IAChB,eAAe;AAAA,MACb;AAAA,QACE;AAAA,QACA;AAAA,UACE,OAAO;AAAA,QACT;AAAA,MACF;AAAA,MACA;AAAA,IACF;AAAA,EACF;AACF,CAAC;AAED,IAAO,8BAAQ;",
  "names": []
}
